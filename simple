#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#define MAX_CMD_LEN 256

extern char **environ;

int main() {
    char cmd[MAX_CMD_LEN];
    while (1) {
        printf("$ ");
        if (fgets(cmd, sizeof(cmd), stdin) == NULL) {
            printf("\n");
            exit(EXIT_SUCCESS);
        }
        // Remove newline at the end
        cmd[strlen(cmd) - 1] = '\0';

        // Check if the input is too long
        if (strlen(cmd) >= MAX_CMD_LEN - 1) {
            printf("Command is too long\n");
            continue;
        }

        if (access(cmd, F_OK) != -1) {
            char *argv[] = {cmd, NULL};
            // Display an error message before execve
            perror("");  // Will print the error message if execve fails
            if (execve(cmd, argv, environ) == -1) {
                perror("Error executing command");
                exit(EXIT_FAILURE);  // Exit with failure status
            }
        } else {
            printf("%s: command not found\n", cmd);
        }
    }
    return 0;
}
