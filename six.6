#include <unistd.h>
#include <stdlib.h>

#define BUFFER_SIZE 1024

ssize_t get_line(char **lineptr, size_t *n, int fd) {
    static char buffer[BUFFER_SIZE];
    static char *p;
    static ssize_t len;

    if (lineptr == NULL || n == NULL) {
        return -1;
    }

    if (*lineptr == NULL) {
        *lineptr = malloc(BUFFER_SIZE);
        if (*lineptr == NULL) {
            return -1;
        }
        *n = BUFFER_SIZE;
    }

    char *ptr = *lineptr;
    size_t total_len = 0;

    while (1) {
        if (len == 0) {
            len = read(fd, buffer, BUFFER_SIZE);
            if (len == -1) {
                return -1;
            } else if (len == 0) {
                if (total_len == 0) {
                    return -1;
                } else {
                    break;
                }
            }
            p = buffer;
        }

        if (total_len + len >= *n) {
            *n *= 2;
            *lineptr = realloc(*lineptr, *n);
            if (*lineptr == NULL) {
                return -1;
            }
            ptr = *lineptr + total_len;
        }

        while (len > 0) {
            *ptr++ = *p++;
            --len;
            ++total_len;
            if (*(ptr - 1) == '\n') {
                break;
            }
        }

        if (*(ptr - 1) == '\n') {
            break;
        }
    }

    *ptr = '\0';
    return total_len;
}
